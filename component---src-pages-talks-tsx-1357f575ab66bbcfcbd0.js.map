{"version":3,"sources":["webpack:///./src/components/talks/Talk.tsx","webpack:///./src/components/talks/YearList.tsx","webpack:///./src/pages/talks.tsx","webpack:///./src/components/Layout.tsx"],"names":["Talk","talk","className","link","href","target","rel","name","presentationDate","month","year","dangerouslySetInnerHTML","__html","description","YearList","talks","key","map","TalksPage","render","talkListEdges","this","props","data","allTalksJson","edges","Layout","SEO","title","keywords","node","React","children"],"mappings":"wJAmCeA,EA7BoB,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACpC,OACE,uBAAKC,UAAU,SACb,sBAAIA,UAAU,gBACXD,EAAKE,KACJ,qBACEC,KAAMH,EAAKE,KACXE,OAAO,SACPC,IAAI,+BACJJ,UAAU,gFAETD,EAAKM,MAGR,4BAAON,EAAKM,MAGd,wBAAML,UAAU,+CACbD,EAAKO,iBAAiBC,MADzB,IACiCR,EAAKO,iBAAiBE,OAGzD,uBACER,UAAU,mCACVS,wBAAyB,CAAEC,OAAQX,EAAKY,iBCZjCC,EAT4B,SAAC,GAAD,IAAGJ,EAAH,EAAGA,KAAMK,EAAT,EAASA,MAAT,OACzC,uBAAKC,IAAKN,EAAMR,UAAU,SACxB,sBAAIA,UAAU,8CAA8CQ,GAC3DK,EAAME,KAAI,SAAChB,GAAD,OACT,gBAAC,EAAD,CAAMe,IAAKf,EAAKM,KAAMN,KAAMA,SCS5BiB,E,kGACJC,OAAA,WAAS,IAGoBC,EAEvBC,KAAKC,MAHPC,KACEC,aAAgBC,MAIpB,OACE,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAKC,MAAM,QAAQC,SAAU,CAAC,cAAe,sBAC7C,sBAAI3B,UAAU,uCAAd,SACA,uBAAKA,UAAU,wDAAf,iHAICkB,EAAcH,KAAI,YAA+B,QAA5Ba,KAAQpB,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAClC,OAAO,gBAAC,EAAD,CAAUC,IAAKN,EAAMA,KAAMA,EAAMK,MAAOA,S,GAjBjCgB,aAwBTb,a,kCC7Cf,wCAeeQ,IAVW,SAAC,GAAD,IAAGM,EAAH,EAAGA,SAAH,OACxB,uBAAK9B,UAAU,oCACb,gBAAC,IAAD,MACA,wBAAMA,UAAU,yGACb8B,GAEH,gBAAC,IAAD","file":"component---src-pages-talks-tsx-1357f575ab66bbcfcbd0.js","sourcesContent":["import * as React from \"react\";\n\ninterface TalkProps {\n  talk: TroyProgBlog.Talk;\n}\n\nconst Talk: React.SFC<TalkProps> = ({ talk }) => {\n  return (\n    <div className=\"mb-10\">\n      <h3 className=\"text-xl mb-4\">\n        {talk.link ? (\n          <a\n            href={talk.link}\n            target=\"_blank\"\n            rel=\"nofollow noopener noreferrer\"\n            className=\"border-solid border-b-4 hover:text-purple-400 duration-300 transition-colors\"\n          >\n            {talk.name}\n          </a>\n        ) : (\n          <span>{talk.name}</span>\n        )}\n\n        <span className=\"ml-1 text-xs text-gray-400 tracking-tighter\">\n          {talk.presentationDate.month}/{talk.presentationDate.year}\n        </span>\n      </h3>\n      <div\n        className=\"text-gray-800 dark:text-gray-300\"\n        dangerouslySetInnerHTML={{ __html: talk.description }}\n      />\n    </div>\n  );\n};\n\nexport default Talk;\n","import * as React from \"react\";\nimport Talk from \"./Talk\";\n\ninterface YearListProps {\n  year: string;\n  talks: TroyProgBlog.Talk[];\n}\n\nconst YearList: React.SFC<YearListProps> = ({ year, talks }) => (\n  <div key={year} className=\"mb-16\">\n    <h2 className=\"tracking-tighter text-3xl mb-3 text-center\">{year}</h2>\n    {talks.map((talk) => (\n      <Talk key={talk.name} talk={talk} />\n    ))}\n  </div>\n);\n\nexport default YearList;\n","import { graphql } from \"gatsby\";\nimport * as React from \"react\";\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/SEO\";\nimport YearList from \"../components/talks/YearList\";\n\ninterface TalkNode {\n  node: {\n    year: string;\n    talks: TroyProgBlog.Talk[];\n  };\n}\n\ninterface TalkPageProps {\n  data: {\n    allTalksJson: {\n      edges: TalkNode[];\n    };\n  };\n}\n\nclass TalksPage extends React.Component<TalkPageProps, {}> {\n  render() {\n    const {\n      data: {\n        allTalksJson: { edges: talkListEdges },\n      },\n    } = this.props;\n\n    return (\n      <Layout>\n        <SEO title=\"Talks\" keywords={[\"programming\", \"conference talks\"]} />\n        <h1 className=\"text-center text-5xl font-bold mb-5\">Talks</h1>\n        <div className=\"text-md text-gray-600 italic mb-8 dark:text-gray-400\">\n          Below are some talks that I have given over time. When possible, I\n          have provided links to slides and/or code.\n        </div>\n        {talkListEdges.map(({ node: { year, talks } }) => {\n          return <YearList key={year} year={year} talks={talks} />;\n        })}\n      </Layout>\n    );\n  }\n}\n\nexport default TalksPage;\n\nexport const pageQuery = graphql`\n  query {\n    allTalksJson(sort: { fields: year, order: DESC }) {\n      edges {\n        node {\n          year\n          talks {\n            description\n            link\n            name\n            presentationDate {\n              year\n              month\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import * as React from \"react\";\n\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\n\nconst Layout: React.SFC = ({ children }) => (\n  <div className=\"dark:bg-gray-800 dark:text-white\">\n    <Header />\n    <main className=\"min-h-screen mx-auto px-4 py-8 max-w-2xl sm:px-6 sm:py-12 lg:max-w-3xl lg:py-16 2xl:max-w-4xl xl:px-0\">\n      {children}\n    </main>\n    <Footer />\n  </div>\n);\n\nexport default Layout;\n"],"sourceRoot":""}