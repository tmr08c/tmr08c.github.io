{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/2021/05/using-mix-install/","result":{"data":{"site":{"siteMetadata":{"repsitory":"https://github.com/tmr08c/tmr08c.github.io"}},"markdownRemark":{"id":"3b6a71c0-e5b9-5b6f-bc8b-985c7e012e55","excerpt":"Despite being a compiled language, Elixir has provided support for running code in a single file as though it were a scripting language since its release. When…","html":"<p>Despite being a compiled language, Elixir has provided support for running code in a single file as though it were a scripting language since its release. When processing a file with the <code>.exs</code> extension Elixir will compile the file in-memory and run the compiled code. In this post, we will cover an experimental feature that is expanding upon the language's scripting abilities.</p>\n<h2 id=\"a-basic-elixir-script\" style=\"position:relative;\"><a href=\"#a-basic-elixir-script\" aria-label=\"a basic elixir script permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A Basic Elixir Script</h2>\n<p>To introduce scripting with Elixir, we can create a file, <code>my_script.exs</code>, to print something \"Hello, World\"-like.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"elixir\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># my_script.exs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">IO</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.puts(</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;Hello, from Elixir&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">IO</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.puts(</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;...a scripting language?&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">)</span></span></span></code></pre>\n<p>We can run our <code>.exs</code> file by passing its pathname to the <code>elixir</code> command.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"bash\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">› elixir my_script.exs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Hello, from Elixir</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">...a scripting language</span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">?</span></span></span></code></pre>\n<p><a href=\"https://thinkingelixir.com/2019-04-running-an-elixir-file-as-a-script/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">This article</a> covers more on how this works.</p>\n<h2 id=\"bringing-in-dependencies\" style=\"position:relative;\"><a href=\"#bringing-in-dependencies\" aria-label=\"bringing in dependencies permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bringing in Dependencies</h2>\n<p>To further extend Elxir's ability to be used in this scripting context, a new <a href=\"https://github.com/elixir-lang/elixir/pull/10674\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">experimental feature</a> has been added in Elixir's <a href=\"https://github.com/elixir-lang/elixir/releases/tag/v1.12.0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">1.12 release</a>, <a href=\"https://hexdocs.pm/mix/1.12.0/Mix.html#install/2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code>Mix.install</code></a>. With <code>Mix.install</code>, you can list third-party packages to use in your script like you would in a <code>mix.exs</code> file. If you are familiar with the Ruby ecosystem, this is similar to the <a href=\"https://bundler.io/guides/bundler_in_a_single_file_ruby_script.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">inline</a> functionality provided by Bundler.</p>\n<h2 id=\"a-basic-mixinstall\" style=\"position:relative;\"><a href=\"#a-basic-mixinstall\" aria-label=\"a basic mixinstall permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A Basic <code>Mix.install</code></h2>\n<p>To start with something simple, let's steal an example from the documentation: JSON-encoding a map with the <a href=\"https://github.com/michalmuskala/jason\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Jason</a> package.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"elixir\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># mix_install_test.exs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">Mix</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.install([</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">:jason</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">IO</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.puts(</span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">Jason</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.encode!(%{</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">hello:</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">:world</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">}))</span></span></span></code></pre>\n<p>When running, we see the following output:</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"bash\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Resolving Hex dependencies...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Dependency resolution completed:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">New:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  jason 1.2.2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">*</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> Getting jason (Hex package)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">==</span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&gt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> jason</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Compiling 8 files (.ex)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Generated jason app</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">{</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;hello&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">:</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;world&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">}</span></span></span></code></pre>\n<p>We first resolve, fetch, and compile our dependencies; this should look familiar to you if you've used <code>mix deps.get</code> before. Once <code>Mix.install</code> is complete and we have our dependencies, we run our <code>IO.puts</code> and output the encoded JSON.</p>\n<h2 id=\"caching\" style=\"position:relative;\"><a href=\"#caching\" aria-label=\"caching permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Caching</h2>\n<p>Our dependencies are cached as a part of our first run; this means subsequent runs will not need to include any dependency management!</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"bash\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">› elixir mix_install_test.exs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># no resolving dependencies!</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">{</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;hello&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">:</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;world&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">}</span></span></span></code></pre>\n<p>To find out where the dependencies are cached on your system, you can pass the <code>verbose</code> option to <code>Mix.install</code>.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"elixir\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">Mix</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.install(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  [</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">:jason</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">verbose:</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">)</span></span></span></code></pre>\n<p>Now, when we run our script, it will output the path to the dependency cache.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"bash\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">› elixir mix_install_test.exs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">using /Users/me/Library/Caches/mix/installs/elixir-1.12.0-erts-12.0/11989020f314102159a0c9ca882052fc</span></span></span></code></pre>\n<p>Caching <a href=\"https://github.com/elixir-lang/elixir/blob/3c7e3bd67d3c78c746a7db359da505e688a6f504/lib/mix/lib/mix.ex#L555-L557\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">is based</a> on a combination of Elixir and OTP versions, as well as the dependencies you have listed. Changing any of these (or setting the <a href=\"https://hexdocs.pm/mix/1.12.0/Mix.html#install/2-options\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code>force</code> flag</a>) will result in a cache miss and require re-fetching and compiling packages.</p>\n<h2 id=\"mix-options\" style=\"position:relative;\"><a href=\"#mix-options\" aria-label=\"mix options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mix Options</h2>\n<p><code>Mix.install</code> works by <a href=\"https://github.com/elixir-lang/elixir/blob/3c7e3bd67d3c78c746a7db359da505e688a6f504/lib/mix/lib/mix.ex#L567-L582\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">dynamically building a Mix project</a> for you when the script runs. As a result, the dependency list passed to <code>Mix.install</code> is the same as your <code>deps</code> list in a Mix project's <code>mix.exs</code>. By working with an in-memory Mix project, you can take full advantage of Mix dependency management, including specifying package versions and all other <a href=\"https://hexdocs.pm/mix/Mix.Tasks.Deps.html#module-options\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">options</a> provided by Mix.</p>\n<h2 id=\"another-example\" style=\"position:relative;\"><a href=\"#another-example\" aria-label=\"another example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Another Example</h2>\n<p>One possible use case I imagined for using <code>Mix.install</code> was to explore new APIs. As an example, I wanted to fetch the current price of Bitcoin from the <a href=\"https://developers.coinbase.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Coinbase API</a>.</p>\n<p>When creating the script, I decided to use <a href=\"https://github.com/appcues/mojito\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Mojito</a> for HTTP requests. Unfortunately, I ran into an issue using OTP 24 with <a href=\"https://github.com/elixir-mint/mint\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Mint</a>, the underlying packages Mojito is built on. This issue <a href=\"https://github.com/elixir-mint/mint/pull/293\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">was resolved</a> on the <code>main</code> branch, but had not yet been released. By leveraging the <a href=\"https://hexdocs.pm/mix/Mix.Tasks.Deps.html#module-git-options-git\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">git options</a> provided by Mix, I was able to point at the <code>main</code> branch to use the latest code. Since I was <em>actually</em> using Mojito, I was also able to leverage the <code>override</code> option to tell Mix to use my overridden version of the dependency. Because <code>Mix.Install</code> provides the full power of Mix dependency management, I was able to easily work around the temporary issues and create a script that solved my problem.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"elixir\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">Mix</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.install(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">:jason</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">:mojito</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">      </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">:mint</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">      </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">git:</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;https://github.com/elixir-mint/mint&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">      </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">branch:</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;main&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">      </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">override:</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">{</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">:ok</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">, %{</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">body:</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> body}} </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  </span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">Mojito</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.request(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">method:</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">:get</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">url:</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;https://api.coindesk.com/v1/bpi/currentprice.json&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">bit_coin_rate </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  body</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">|&gt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">Jason</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.decode!()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">|&gt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> get_in([</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;bpi&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">, </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;USD&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">, </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;rate&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">IO</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.puts(</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;The current rate for Bitcoin is </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">#{</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">bit_coin_rate</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">}</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">)</span></span></span></code></pre>\n<p>We can now run this program as though it were a Ruby or Python script to track our Bitcoin investment 💎 🙌 🚀!</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"bash\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">› elixir bitcoin_price.exs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">The current rate </span><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">for</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> Bitcoin is 55,277.6167</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">› elixir bitcoin_price.exs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">The current rate </span><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">for</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> Bitcoin is 55,168.1100</span></span></span></code></pre>\n<h2 id=\"future\" style=\"position:relative;\"><a href=\"#future\" aria-label=\"future permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Future</h2>\n<p>Because we still need Elixir installed on our system to run the script, this doesn't provide us with the portability of something like <a href=\"https://www.digitalocean.com/community/tutorials/how-to-build-and-install-go-programs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Go's ability to build executable binaries</a>. For that, you may want to explore <a href=\"https://github.com/bake-bake-bake/bakeware\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Bakeware</a>. For something between a single file script and <code>Bakeware</code>, you may also want to investigate <a href=\"https://hexdocs.pm/mix/master/Mix.Tasks.Escript.Build.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">escript</a>. With <code>escript</code>, you can build your <code>mix</code> project into an executable. It does, however, require Erlang to be installed on the system running the program.</p>\n<p>While you may need to reach for more robust options, <code>Mix.install</code> provides another tool in the Elixir toolbelt. With the addition of a single function, Elixir has increased its abilities to write small scripts and be used in more ways.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .tomorrow {\n    background-color: #FFFFFF;\n    color: #4D4D4C;\n  }\n  .tomorrow .grvsc-t564vY-3 { color: #8E908C; }\n  .tomorrow .grvsc-t564vY-8 { color: #C82829; }\n  .tomorrow .grvsc-t564vY-1 { color: #4D4D4C; }\n  .tomorrow .grvsc-t564vY-7 { color: #718C00; }\n  .tomorrow .grvsc-t564vY-6 { color: #3E999F; }\n  .tomorrow .grvsc-t564vY-4 { color: #F5871F; }\n  .tomorrow .grvsc-t564vY-11 { color: #8959A8; }\n  .tomorrow .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(0, 0, 0, 0.05));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(0, 0, 0, 0.2));\n  }\n  body.dark .grvsc-ps-tJmpaV {\n    background-color: #1D1F21;\n    color: #C5C8C6;\n  }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-3 { color: #969896; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-8 { color: #CC6666; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-1 { color: #C5C8C6; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-7 { color: #B5BD68; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-6 { color: #8ABEB7; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-4 { color: #DE935F; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-11 { color: #B294BB; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","frontmatter":{"title":"Using Mix.install","date":"May 28, 2021"}}},"pageContext":{"slug":"/2021/05/using-mix-install/","previous":{"fields":{"slug":"/2021/04/phoenix-app-in-iframe/"},"frontmatter":{"title":"Running a Phoenix App in an iframe"}},"next":{"fields":{"slug":"/2021/06/more-specific-factories-with-traits/"},"frontmatter":{"title":"Creating More Specific Factories with Traits"}}}},"staticQueryHashes":["3128451518","3649515864"]}