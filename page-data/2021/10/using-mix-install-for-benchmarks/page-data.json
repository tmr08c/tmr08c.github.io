{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/2021/10/using-mix-install-for-benchmarks/","result":{"data":{"site":{"siteMetadata":{"repsitory":"https://github.com/tmr08c/tmr08c.github.io"}},"markdownRemark":{"id":"82115760-15d8-5f85-9d21-220634cb3439","excerpt":"In a previous post, I covered using the recently released function, Mix.install. In this post, I cover how to use Mix.install for benchmarking. If you are…","html":"<p>In a <a href=\"/2021/05/using-mix-install/\">previous post</a>, I covered using the <a href=\"https://hexdocs.pm/elixir/1.12/changelog.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">recently released</a> function, <a href=\"https://hexdocs.pm/mix/1.12/Mix.html#install/2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code>Mix.install</code></a>. In this post, I cover how to use <code>Mix.install</code> for benchmarking.</p>\n<p>If you are interested in (micro) benchmarking, you may already be familiar with <a href=\"https://github.com/bencheeorg/benchee\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">benchee</a>. Benchee provides the ability to collect and compare metrics about speed (via iterations per second) and memory usage for your function calls.</p>\n<p>Because benchee is a third-party library, we have to install it via <a href=\"https://hex.pm/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Hex</a>. While benchee is useful enough to include it as a dev-dependency in your project, you may no longer <em>have</em> to with <code>Mix.install</code>.</p>\n<p>Let's take a look at an example <del>stolen</del> copied directly from the <a href=\"https://github.com/bencheeorg/benchee#benchee----\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">benchee README</a></p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"elixir\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># my_test_benchmark.exs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">Mix</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.install([</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">:benchee</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">list </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">Enum</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.to_list(</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">..</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">10_000</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">map_fun </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">fn</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> i </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">-&gt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> [i, i </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">*</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> i] </span><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">Benchee</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.run(%{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;flat_map&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=&gt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">fn</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">-&gt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">Enum</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.flat_map(list, map_fun) </span><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">end</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;map.flatten&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=&gt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">fn</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">-&gt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> list </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">|&gt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">Enum</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.map(map_fun) </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">|&gt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">List</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.flatten() </span><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">})</span></span></span></code></pre>\n<p>With the addition of <code>Mix.install([:benchee])</code>, Elixir will fetch and build our benchee dependency on the first run.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"bash\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">› elixir my_test_benchmark.exs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Resolving Hex dependencies...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Dependency resolution completed:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">New:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  benchee 1.0.1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  deep_merge 1.0.0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">*</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> Getting benchee (Hex package)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">*</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> Getting deep_merge (Hex package)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">==</span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&gt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> deep_merge</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Compiling 2 files (.ex)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Generated deep_merge app</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">==</span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&gt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> benchee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Compiling 39 files (.ex)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Generated benchee app</span></span></span></code></pre>\n<p>Once this is complete, we will see our benchee's benchmark results.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"bash\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Operating System: macOS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">CPU Information: Intel(R) Core(TM) i7-4771 CPU @ 3.50GHz</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Number of Available Cores: 8</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Available memory: 32 GB</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Elixir 1.12.3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Erlang 24.1.2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Benchmark suite executing with the following configuration:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">warmup: 2 s</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">time: 5 s</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">memory time: 0 ns</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">parallel: 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">inputs: none specified</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Estimated total run time: 14 s</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Benchmarking flat_map...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Benchmarking map.flatten...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Name                  ips        average  deviation         median         99th %</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">flat_map           2.50 K      400.75 μs    ±19.69%         378 μs      826.49 μs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">map.flatten        1.24 K      806.81 μs    ±35.19%         658 μs        1625 μs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Comparison:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">flat_map           2.50 K</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">map.flatten        1.24 K - 2.01x slower +406.05 μs</span></span></span></code></pre>\n<p>Because <code>Mix.install</code> caches our dependencies, subsequent runs will not need to rebuild the dependencies and immediately start the benchmark.</p>\n<p>We now have a single file benchmark script that we can easily re-run and share with others.</p>\n<p>A word of warning: a limitation of this approach is that you do not get access to your application code like you would when running a script via <code>mix run</code>. It may be a bit of a stretch, but this may be a feature and not a bug. By extracting the core functionality you want to benchmark away from the rest of your application, you may better avoid the noise and side effects that could come as a part of running other parts of your application.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .tomorrow {\n    background-color: #FFFFFF;\n    color: #4D4D4C;\n  }\n  .tomorrow .grvsc-t564vY-3 { color: #8E908C; }\n  .tomorrow .grvsc-t564vY-8 { color: #C82829; }\n  .tomorrow .grvsc-t564vY-1 { color: #4D4D4C; }\n  .tomorrow .grvsc-t564vY-4 { color: #F5871F; }\n  .tomorrow .grvsc-t564vY-6 { color: #3E999F; }\n  .tomorrow .grvsc-t564vY-11 { color: #8959A8; }\n  .tomorrow .grvsc-t564vY-7 { color: #718C00; }\n  .tomorrow .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(0, 0, 0, 0.05));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(0, 0, 0, 0.2));\n  }\n  body.dark .grvsc-ps-tJmpaV {\n    background-color: #1D1F21;\n    color: #C5C8C6;\n  }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-3 { color: #969896; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-8 { color: #CC6666; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-1 { color: #C5C8C6; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-4 { color: #DE935F; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-6 { color: #8ABEB7; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-11 { color: #B294BB; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-7 { color: #B5BD68; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","frontmatter":{"title":"Using Mix.install for Benchmarks","date":"October 30, 2021"}}},"pageContext":{"slug":"/2021/10/using-mix-install-for-benchmarks/","previous":{"fields":{"slug":"/2021/09/intro-to-postgres-explain/"},"frontmatter":{"title":"Intro to Postgre EXPLAIN"}},"next":{"fields":{"slug":"/2021/11/pattern-matching-empty-map-with-elixir/"},"frontmatter":{"title":"Pattern Matching Empty Maps with Elixir"}}}},"staticQueryHashes":["3128451518","3649515864"]}