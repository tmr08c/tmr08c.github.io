{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/2020/03/referencing-local-gem-in-gemfile/","result":{"data":{"site":{"siteMetadata":{"repsitory":"https://github.com/tmr08c/tmr08c.github.io"}},"markdownRemark":{"id":"91bcc557-b4a1-568f-8f62-49a6f1110a79","excerpt":"In a recent post, I discussed my new debugging technique of pulling down third party libraries. While having the code local to read and search is a win in andâ€¦","html":"<p>In a <a href=\"/2020/04/how-i-debug-my-dependencies\">recent post</a>, I discussed my new debugging technique of pulling down third party libraries. While having the code local to read and search is a win in and of itself, <em>running</em> the code can be even more helpful. Since this new practice is a habit I am still working to develop, I thought I would write down how to get it working. Hopefully, this <a href=\"https://twitter.com/jamesclear/status/1091687364953587714?lang=en\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">reduces the friction</a> for my future self.</p>\n<h2 id=\"what-to-do\" style=\"position:relative;\"><a href=\"#what-to-do\" aria-label=\"what to do permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What to do</h2>\n<p>Since our project is using <a href=\"https://bundler.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code>Bundler</code></a>, I was able to update the line where we add the gem in question to use the <a href=\"https://bundler.io/man/gemfile.5.html#PATH\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code>path</code></a> option and point it to the (relative) path on my system:</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># Gemfile</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">gem </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&#39;gem-im-debugging&#39;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">, </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">path:</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&#39;../gem-im-debugging&#39;</span></span></span></code></pre>\n<p>Currently, I keep all repositories in the same directory. This enables me to use the relative path to the parent directory to find the local version of the gem I am debugging. Depending on where you copy the project,  you may need to adjust your path.</p>\n<h2 id=\"possible-alternative\" style=\"position:relative;\"><a href=\"#possible-alternative\" aria-label=\"possible alternative permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Possible alternative</h2>\n<p>As I was trying to find the documentation to link to in this post, I also found <a href=\"https://bundler.io/v1.2/git.html#local\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this option</a>:</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"bash\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">bundle config local.GEM_NAME /path/to/local/git/repository</span></span></span></code></pre>\n<p>Below is the example from the docs getting it working for a local version of <code>rack</code>.</p>\n<p>In your terminal set <code>Bundler</code> to use your local version of the gem:</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"bash\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">bundle config local.rack </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">~</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">/Work/git/rack</span></span></span></code></pre>\n<p>and then in your Gemfile, you can include the gem as though you are pulling it off of GitHub:</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># Gemfile</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">gem </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&#39;rack&#39;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">, </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:github</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> =&gt; </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&#39;rack/rack&#39;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">, </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:branch</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> =&gt; </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&#39;master&#39;</span></span></span></code></pre>\n<p>My initial impression is that this could achieve the same thing, but seems to take a bit more work.</p>\n<p>My guess is this would be useful if you regularly work on a gem and want to have some test projects around. Being able to reference different branches from the test project itself could be useful. Also, based on the documentation it seems <code>path</code> will not compile C extensions, but <code>git</code> (and <code>github</code>?) will. If you are working with C extensions you may have to leverage this alternative method.</p>\n<p>As I find more opportunities to work with gems locally, I may want to revisit this option (and learn how to turn it back off). </p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .tomorrow {\n    background-color: #FFFFFF;\n    color: #4D4D4C;\n  }\n  .tomorrow .grvsc-t564vY-3 { color: #8E908C; }\n  .tomorrow .grvsc-t564vY-1 { color: #4D4D4C; }\n  .tomorrow .grvsc-t564vY-7 { color: #718C00; }\n  .tomorrow .grvsc-t564vY-6 { color: #3E999F; }\n  .tomorrow .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(0, 0, 0, 0.05));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(0, 0, 0, 0.2));\n  }\n  body.dark .grvsc-ps-tJmpaV {\n    background-color: #1D1F21;\n    color: #C5C8C6;\n  }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-3 { color: #969896; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-1 { color: #C5C8C6; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-7 { color: #B5BD68; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-6 { color: #8ABEB7; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","frontmatter":{"title":"Referencing a local gem in Gemfile","date":"April 10, 2020"}}},"pageContext":{"slug":"/2020/03/referencing-local-gem-in-gemfile/","previous":{"fields":{"slug":"/2020/04/how-i-debug-my-dependencies/"},"frontmatter":{"title":"How I Debug My Dependencies"}},"next":{"fields":{"slug":"/2020/05/concurrent-ruby-hello-async/"},"frontmatter":{"title":"Concurrent Ruby - Hello, Async"}}}},"staticQueryHashes":["3128451518","3649515864"]}