{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/2020/12/gh-cli-for-maintaining/","result":{"data":{"site":{"siteMetadata":{"repsitory":"https://github.com/tmr08c/tmr08c.github.io"}},"markdownRemark":{"id":"7da4819d-b437-5c0f-ba21-a84be805b81a","excerpt":"In a previous post, I mentioned using the GitHub CLI during Hacktoberfest to make it easier to contribute to projects. This year, I was also fortunate to be…","html":"<p>In a <a href=\"/2020/11/gh-cli-for-contributing\">previous post</a>, I mentioned using the <a href=\"https://github.com/cli/cli\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub CLI</a> during Hacktoberfest to make it easier to contribute to projects. This year, I was also fortunate to be able to participate in Hacktoberfest as a collaborator on the <a href=\"https://github.com/devise-security/devise-security/issues/232\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code>devise-security</code></a> project.</p>\n<p>The command I used the most as a collaborator was <code>gh pr checkout</code> for checking out the code related to a Pull Request. Using this command is now my go-to way of getting access to the code I am reviewing.</p>\n<p>As you may be able able to guess from the name, the <code>pr checkout</code> command will, similar to <a href=\"https://git-scm.com/docs/git-checkout\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code>git-checkout</code></a> or <a href=\"https://git-scm.com/docs/git-switch\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code>git-switch</code></a>, check out the code for the Pull Request it is given as an argument. </p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"bash\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&gt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> gh pr checkout --help</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Check out a pull request </span><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">in</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> git</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">USAGE</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  gh pr checkout {</span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">number</span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&gt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">|</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">url</span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&gt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">|</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">branch</span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&gt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">} [flags]</span></span></span></code></pre>\n<p>The main reason I find myself using <code>pr checkout</code> over regular <code>git-checkout</code> is the fact that it will <code>fetch</code> and <code>pull</code> the latest version of the branch from your remote when switching to the branch. At a minimum, this saves some typing, but, for me, this more often prevents me from forgetting to pull in the latest changes and reviewing out-of-date code.</p>\n<p>When working on an open source project, I find CLI's <code>pr checkout</code> command to be even more powerful, as it will seamlessly check out the <code>ref</code> for the Pull Request that is <a href=\"https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/checking-out-pull-requests-locally#modifying-an-inactive-pull-request-locally\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">created by GitHub</a>:</p>\n<blockquote>\n<p>Once a pull request is opened, GitHub stores all of the changes remotely. In other words, commits in a pull request are available in a repository even before the pull request is merged. You can fetch an open pull request and recreate it as your own.</p>\n</blockquote>\n<p>Below, you can see how the command <code>fetch</code>es the latest changes from the remotes. It will then switch to a reference that is based on the <code>master</code> branch of someone else's <code>fork</code> of the project.</p>\n<pre class=\"grvsc-container grvsc-has-line-highlighting tomorrow grvsc-ps-tJmpaV\" data-language=\"bash\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">› gh pr checkout 245</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">remote: Enumerating objects: 7, done.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">remote: Counting objects: 100% (7/7), done.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">remote: Total 12 (delta 7), reused 7 (delta 7), pack-reused 5</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Unpacking objects: 100% (12/12), 1.40 KiB </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">|</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> 75.00 KiB/s, done.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">From https://github.com/devise-security/devise-security</span></span></span>\n<span class=\"grvsc-line grvsc-line-highlighted\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">*</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> [new ref]         refs/pull/245/head -</span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&gt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> DevS1993/master</span></span></span>\n<span class=\"grvsc-line grvsc-line-highlighted\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">Switched to branch </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&#39;DevS1993/master&#39;</span></span></span></code></pre>\n<p>The <a href=\"https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/checking-out-pull-requests-locally#modifying-an-inactive-pull-request-locally\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">alternative workflow</a> would be something like:</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"bash\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">git fetch origin pull/245/head:DevS1993/master</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">git switch DevS1993/master</span></span></span></code></pre>\n<p>While the alternative method is only two commands, <code>pr checkout</code> is less typing, and it provides more user-friendly ergonomics. Not only does it save you from having to think of a new, temporary branch name, but it also handles actually <code>switch</code>ing to that branch as well. CLI knows you want to check out this code and makes it easy to do just that.</p>\n<p>Additionally, with CLI, you can use the same command to checkout a Pull Request for the first time and the N'th time; you don't have to recall if you have already created a branch for the <code>ref</code> or not and you will always get the most up-to-date version of the code.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .tomorrow {\n    background-color: #FFFFFF;\n    color: #4D4D4C;\n  }\n  .tomorrow .grvsc-t564vY-6 { color: #3E999F; }\n  .tomorrow .grvsc-t564vY-1 { color: #4D4D4C; }\n  .tomorrow .grvsc-t564vY-11 { color: #8959A8; }\n  .tomorrow .grvsc-t564vY-7 { color: #718C00; }\n  .tomorrow .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(0, 0, 0, 0.05));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(0, 0, 0, 0.2));\n  }\n  body.dark .grvsc-ps-tJmpaV {\n    background-color: #1D1F21;\n    color: #C5C8C6;\n  }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-6 { color: #8ABEB7; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-1 { color: #C5C8C6; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-11 { color: #B294BB; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-7 { color: #B5BD68; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","frontmatter":{"title":"Leveraging the GitHub CLI During Hacktoberfest - Maintaining","date":"December 04, 2020"}}},"pageContext":{"slug":"/2020/12/gh-cli-for-maintaining/","previous":{"fields":{"slug":"/2020/11/gh-cli-for-contributing/"},"frontmatter":{"title":"Leveraging the GitHub CLI During Hacktoberfest - Contributing"}},"next":{"fields":{"slug":"/2021/01/receiving-code-review-feedback/"},"frontmatter":{"title":"Receiving Code Review Feedback"}}}},"staticQueryHashes":["3128451518","3649515864"]}