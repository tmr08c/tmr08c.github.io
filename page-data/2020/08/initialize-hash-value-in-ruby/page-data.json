{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/2020/08/initialize-hash-value-in-ruby/","result":{"data":{"site":{"siteMetadata":{"repsitory":"https://github.com/tmr08c/tmr08c.github.io"}},"markdownRemark":{"id":"82ec29fe-5935-5845-9b5a-bced35f7d905","excerpt":"Ruby's Hash.new has three different options for initialization. These options differ in how they handle missing keys. In this post, we will cover the threeâ€¦","html":"<p>Ruby's <a href=\"https://ruby-doc.org/core-2.7.1/Hash.html#method-c-new\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code>Hash.new</code></a> has three different options for initialization. These options differ in how they handle missing keys. In this post, we will cover the three variations and issues you may encounter using them.</p>\n<h2 id=\"tldr\" style=\"position:relative;\"><a href=\"#tldr\" aria-label=\"tldr permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tl;dr</h2>\n<p>Before we cover the different options more in-depth, here's an overview.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># == No arguments, default to `nil`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">new_hash </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-9 grvsc-tJmpaV-9\">Hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.</span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">new</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">new_hash[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:not_here</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">nil</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># same behavior with `{}` style</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">bare_hash </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> {}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">bare_hash[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:also_not_here</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">nil</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># == Argument, use as default</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">hash_with_default </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-9 grvsc-tJmpaV-9\">Hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.</span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">(</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:default</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">hash_with_default[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:not_set</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:default</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># WARNING! This will use the **same** object</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-9 grvsc-tJmpaV-9\">Hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.</span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">([])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:first</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;&lt;=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:second</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;&lt;=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; {</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:first</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;[</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">, </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">2</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">], </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:second</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;[</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">, </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">2</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># == Using a block</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-9 grvsc-tJmpaV-9\">Hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.</span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> { |</span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">, </span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">key</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">| hash[key] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> [] }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:first</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;&lt;=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:second</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;&lt;=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; {</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:first</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;[</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">], </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:second</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;[</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">2</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]}</span></span></span></code></pre>\n<h2 id=\"no-argument\" style=\"position:relative;\"><a href=\"#no-argument\" aria-label=\"no argument permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>No Argument</h2>\n<p>Most of the time you probably don't actually use <code>Hash.new</code> for creating a new hash. Instead, you are probably used to using the implicit form syntax (<code>{}</code>). For the purposes of handling missing keys, this behaves the same as <code>Hash.new</code> when no argument is passed in.</p>\n<p>When you use <code>Hash.new</code> with no arguments (or the <code>{}</code> syntax) the hash will return <code>nil</code> if a key does not exist.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">new_hash </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-9 grvsc-tJmpaV-9\">Hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.</span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">new</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">new_hash[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:not_here</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">nil</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">bare_hash </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> {}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">bare_hash[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:also_not_here</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">nil</span></span></span></code></pre>\n<p>Aside from the <a href=\"https://thoughtbot.com/blog/if-you-gaze-into-nil-nil-gazes-also-into-you\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">evils of <code>nil</code></a>, this works for most situations. By adding in some <code>if</code>s or using the <a href=\"https://ruby-doc.org/core-2.6/doc/syntax/calling_methods_rdoc.html#label-Safe+navigation+operator\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">safe navigation operator</a> you can successfully work with the default of <code>nil</code>.</p>\n<p>Sometimes, however, it can be easier to work with your code if you have a default value returned when accessing a key that doesn't exist. Let's see how this can be done.</p>\n<h2 id=\"with-an-argument\" style=\"position:relative;\"><a href=\"#with-an-argument\" aria-label=\"with an argument permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>With an Argument</h2>\n<p>The second form of initializing a Hash is by passing in an object. This object will then be used as the default value. <a href=\"https://ruby-doc.org/core-2.7.1/Hash.html#method-c-new\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">From the docs</a>:</p>\n<blockquote>\n<p>If obj is specified, this single object will be used for all default values.</p>\n</blockquote>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">hash_with_default </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-9 grvsc-tJmpaV-9\">Hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.</span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">(</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:default</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">hash_with_default[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:set</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:not_default</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">hash_with_default[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:set</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:not_default</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">hash_with_default[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:not_set</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:default</span></span></span></code></pre>\n<h3 id=\"use-case\" style=\"position:relative;\"><a href=\"#use-case\" aria-label=\"use case permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use Case</h3>\n<p>I most commonly reach for this style when using a hash as a counter.</p>\n<p>For example, let's say we want to count the occurrences of each letter in a sentence. Without a default value you would have to do something like:</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">sentence </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;to be, or not to be&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">letter_counter </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-9 grvsc-tJmpaV-9\">Hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.</span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">new</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">sentence.each_char </span><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">do</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> |</span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">letter</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">|</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  letter_counter[letter] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">||=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  letter_counter[letter] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">+=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">letter_counter</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; {</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;t&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">3</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;o&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">4</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot; &quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">5</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;b&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">2</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;e&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">2</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;,&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;r&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;n&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">}</span></span></span></code></pre>\n<p>By setting a default value of <code>0</code>, you would no longer need to do <code>letter_counter[letter] ||= 0</code>. If a key doesn't exist, we get a default value of <code>0</code>.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">sentence </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;to be, or not to be&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">letter_counter </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-9 grvsc-tJmpaV-9\">Hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.</span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">(</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">0</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">sentence.each_char </span><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">do</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> |</span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">letter</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">|</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  letter_counter[letter] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">+=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">letter_counter</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; {</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;t&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">3</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;o&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">4</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot; &quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">5</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;b&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">2</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;e&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">2</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;,&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;r&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;n&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">}</span></span></span></code></pre>\n<p>While it's only a one-line difference in this example, it helps remove some of the ceremony and enables more focus on what the code is actually trying to do.</p>\n<h3 id=\"-operator\" style=\"position:relative;\"><a href=\"#-operator\" aria-label=\" operator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>&#x3C;&#x3C;=</code> Operator</h3>\n<p>Before we move onto the next section, I want to provide a quick introduction to the <code>&#x3C;&#x3C;=</code> operator because we will be using it in upcoming examples.</p>\n<p>The <code>&#x3C;&#x3C;=</code> operator is an example of <a href=\"https://ruby-doc.org/core-2.7.1/doc/syntax/assignment_rdoc.html#label-Abbreviated+Assignment\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">abbreviated assignment</a> - this is similar to operators like <code>+=</code> and <code>||=</code>.</p>\n<p>This operator is necessary when we return a default value for a hash but don't <em>set</em> that value in the hash.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># default to returning an array</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-9 grvsc-tJmpaV-9\">Hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.</span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">([])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># for a key that doesn&#39;t exist, we get back an array</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:foo</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; []</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># but it&#39;s not set in the hash itself yet</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; {}</span></span></span></code></pre>\n<p>With the <code>&#x3C;&#x3C;=</code> operator, we can shovel (<code>&#x3C;&#x3C;</code>) a value onto the default array that is returned <strong>and</strong> set the hash value equal to the resulting array. Let's break it down:</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;&lt;=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span></span></span></code></pre>\n<p>This can be thought of as:</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;&lt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span></span></span></code></pre>\n<p>The right side version of <code>h[:new]</code> will be run first. Since the key doesn't exist, it will use the default value we passed in (the array).</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># =&gt; []</span></span></span></code></pre>\n<p>We then add <code>1</code> onto our array.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;&lt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># =&gt; [1]</span></span></span></code></pre>\n<p>Our right side is now <code>[1]</code>.</p>\n<p>We will then set <code>h[:new]</code> equal to the right side, which is our array.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> [</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; {</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;[</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]}</span></span></span></code></pre>\n<p>Let's see how we can leverage this operator to more easily interact with our new default return values.</p>\n<h3 id=\"mutable-objects\" style=\"position:relative;\"><a href=\"#mutable-objects\" aria-label=\"mutable objects permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mutable Objects</h3>\n<p>When using the argument version of <code>Hash.new</code> there is a phrase in the documentation we need to keep in mind (emphasis mine):</p>\n<blockquote>\n<p>If obj is specified, this <strong>single object</strong> will be used for all default values.</p>\n</blockquote>\n<p>The <strong>single object</strong> passed in will be (re)used for all defaults. In our example above we used an integer. These are not mutable, so <code>0</code> will always be <code>0</code> when using it as the default. However, if you use something that can be mutated, you will see the impact of this single object re-use.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">company </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-9 grvsc-tJmpaV-9\">Hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.</span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">([])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">company[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:development</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;&lt;=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;dev1&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">company[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:marketing</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;&lt;=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;marketer1&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">company[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:development</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;&lt;=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;dev2&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">company</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:development</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> =&gt; [</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;dev1&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">, </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;marketer1&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">, </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;dev2&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:marketing</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> =&gt;   [</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;dev1&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">, </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;marketer1&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">, </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;dev2&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">}</span></span></span></code></pre>\n<p>What's going on here? Both hash value looks the same!?</p>\n<p>This is the result of using the <strong>single object</strong> for all default values. When we are setting a new key in the hash we set it to default to an array. However, rather than getting a new array each time, we get the <strong>same</strong> array. Another way to think about this could be something like:</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">default_value </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> []</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-9 grvsc-tJmpaV-9\">Hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.</span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">(default_value)</span></span></span></code></pre>\n<p>When written this way, the behavior may be less surprising. When you pass in a variable, it may seem more intuitive that the same variable would be used.</p>\n<p>You will see similar behavior with most other objects you use as a default in this way and should be aware of whether that is the behavior you want or not.</p>\n<h3 id=\"alternative-default-value-syntax\" style=\"position:relative;\"><a href=\"#alternative-default-value-syntax\" aria-label=\"alternative default value syntax permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Alternative default value syntax</h3>\n<p>While the focus of this post is about leveraging <code>Hash.new</code>, there is an alternative way to get this same functionality. Ruby also provides a <a href=\"https://ruby-doc.org/core-2.7.1/Hash.html#method-i-default-3D\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code>Hash#default=</code></a> method. This works the same as passing in an object to <code>#new</code> and will re-use the single object passed in.</p>\n<p>One advantage of using the <code>#default=</code> method is that you can use it with hashes created using the implicit form (<code>{}</code>).</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> {}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h.default </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> []</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:first</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;&lt;=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:second</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;&lt;=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; {</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:first</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;[</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">, </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">2</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:second</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;[</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">, </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">2</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]}</span></span></span></code></pre>\n<p>You can also change the default multiple times if you want, though this may be more of a <a href=\"https://en.wiktionary.org/wiki/footgun\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">footgun</a> than something you want to do in practice.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> {}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h.default </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:first</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">+=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h.default </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> []</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:second</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;&lt;=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; {</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:first</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:second</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;[</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">2</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]}</span></span></span></code></pre>\n<p>In general, I think there is value in co-locating the creation of the hash with the default value. This makes it easier to understand and debug. Setting the default in (multiple) other places can make it harder to track down what the expected behavior should be. Although, you can use <a href=\"https://ruby-doc.org/core-2.7.1/Hash.html#method-i-default\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code>Hash#default</code></a> to check the current default value to help with this.</p>\n<h2 id=\"using-a-block\" style=\"position:relative;\"><a href=\"#using-a-block\" aria-label=\"using a block permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using a block</h2>\n<p>The third option for setting a default argument with <code>Hash.new</code> is to pass it a block. When you try to access a key that does not exist, this block will be executed and will return whatever is returned in the block. Let's see what this looks like:</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-9 grvsc-tJmpaV-9\">Hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.</span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  </span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">puts</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;It looks like you don&#39;t have this key yet.&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> \\</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">        </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot; Let&#39;s set it to an empty array&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  []</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;It looks like you don&#39;t have this key yet.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">Let&#39;s set it to an empty array&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; []</span></span></span></code></pre>\n<h3 id=\"returning-a-value\" style=\"position:relative;\"><a href=\"#returning-a-value\" aria-label=\"returning a value permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Returning a value</h3>\n<p>Does returning an empty array from the block help solve the problem of object reuse?</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-9 grvsc-tJmpaV-9\">Hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.</span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> { [] }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:first</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;&lt;=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:second</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;&lt;=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:first</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;&lt;=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; {</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:first</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;[</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">, </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">3</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">    </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:second</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;[</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">2</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]}</span></span></span></code></pre>\n<p>We no longer have this problem!</p>\n<p>This is because rather than sharing the same object as our default value, we are invoking the block and creating a <strong>new</strong> array any time we do not already have a key.</p>\n<p>Even though our problem of sharing the same value is gone, it is a bit unintuitive that we have to use the <code>&#x3C;&#x3C;=</code> operator. I would expect to be able to use the plain shovel operator (<code>&#x3C;&#x3C;</code>) to add a value to our empty array.</p>\n<p>Fortunately, we can make this happen.</p>\n<h3 id=\"updating-the-hash\" style=\"position:relative;\"><a href=\"#updating-the-hash\" aria-label=\"updating the hash permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Updating the hash</h3>\n<p>In our previous example, our block was returning our default value, but not setting the key in our hash. Let's see if there's anything in the <a href=\"https://ruby-doc.org/core-2.7.1/Hash.html#method-c-new\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">documentation</a> that helps us (emphasis mine):</p>\n<blockquote>\n<p>If a block is specified, it will be called with the hash object and the key,\nand should return the default value. <strong>It is the block's responsibility to\nstore the value in the hash if required.</strong></p>\n</blockquote>\n<p>The documentation notes the block is responsible for storing the value in the hash. Since we weren't explicitly doing that in our previous block, it seems it's expected behavior that the values aren't set. But how do we set them?</p>\n<p>Something else the documentation points out is that the block will be passed the hash and the requested key. Previously, we weren't capturing the arguments passed into the hash. Below is an example where we capture the arguments and print out some information about them.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># in the block we receive `hash` and `key`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-9 grvsc-tJmpaV-9\">Hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.</span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">do</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> |</span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">, </span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">key</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">|</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  </span><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># print some information about our arguments</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  </span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">puts</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;Currently, your hash looks like </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">#{</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">hash</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">}</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">. &quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> \\</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">       </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;This does not include the key &#39;</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">#{</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">key</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">}</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&#39;. &quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> \\</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">       </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;We will set it to a default empty array&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  </span><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># do what we did before and simply return the array</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  []</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">end</span></span></span></code></pre>\n<p>Let's take a look at what this looks like when we try to access a key that doesn't exist:</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:old</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:set</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:set</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;Currently, your hash looks like {:old=&gt;:set}. \\</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">  This does not include the key &#39;new&#39;. \\</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">  We will set it to a default empty array&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; []</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># we still have the old key,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># but didn&#39;t set the new one</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; {</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:old</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:set</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">}</span></span></span></code></pre>\n<p>From this example, we can see we are passed in the hash we are attempting to index into and the key we are attempting to access (that doesn't yet exist). We continued to simply return the new array, but what if we take the advice of the documentation and try to store the value in the hash if that's what we want?</p>\n<h3 id=\"storing-a-value\" style=\"position:relative;\"><a href=\"#storing-a-value\" aria-label=\"storing a value permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Storing a value</h3>\n<p>In this example, we will now update our hash and set the key-value pair in our block.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># set `hash`&#39;s `key` to equal our default empty array</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-9 grvsc-tJmpaV-9\">Hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.</span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">do</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> |</span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">, </span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">key</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">|</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  hash[key] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> []</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># reference a key that doesn&#39;t exist</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:izzo</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; []</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># it&#39;s now set in our hash</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; {</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:izzo</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;[]}</span></span></span></code></pre>\n<p>Does this continue to avoid our problem of reusing the same value?</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:first</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;&lt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:second</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;&lt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:first</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;&lt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;one&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;  </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:first</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;[</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">, </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;one&quot;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">], </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:second</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;[</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">2</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]}</span></span></span></code></pre>\n<p>It does! Again, we are seeing that running the block creates a <strong>new</strong> array every time the block is executed instead of reusing the same instance as we saw with the parameter version.</p>\n<p>In addition to setting the key-value pair in our hash, we also return the value. This enables us to interact with the newly set value right away with an operator like <code>&#x3C;&#x3C;</code>.</p>\n<p>With this, we get the ease of use of directly returning a default value without having to remember to update the hash itself.</p>\n<h3 id=\"alternative-default-block-syntax\" style=\"position:relative;\"><a href=\"#alternative-default-block-syntax\" aria-label=\"alternative default block syntax permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Alternative default block syntax</h3>\n<p>Similar to <code>Hash#default=</code> covered <a href=\"#alternative-default-value-syntax\">above</a>, there is a <a href=\"https://ruby-doc.org/core-2.7.1/Hash.html#method-i-default_proc-3D\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code>Hash#default_proc=</code></a> method that can be used to set a default value for a hash using a proc.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> {}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h.default_proc </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">proc</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">do</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> |</span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">, </span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">key</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">|</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  hash[key] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> []</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:first</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;&lt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; {</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:first</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt;[</span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]}</span></span></span></code></pre>\n<p>One thing to point out is that the <code>default=</code> method covered above will <strong>not</strong> work if given a proc and you must use the <code>default_proc=</code> version (and vice versa for non-procs).</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h.default </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">proc</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> { |</span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">, </span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">key</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">| hash[key] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> [] }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># instead of getting back an array,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># we get a Proc</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:first</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">&lt;&lt;</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; </span><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\">#&lt;Proc:0x00007f98620c8120&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># and nothing is set in our hash</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; {}</span></span></span></code></pre>\n<p>It also looks like Ruby will (reasonably) only let you have <code>default</code> or <code>default_proc</code> set. Setting one will clear out the other.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> {}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># check initial defaults</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h.default</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">nil</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h.default_proc</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">nil</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># set default</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h.default </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h.default</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># set default_proc</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h.default_proc </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">proc</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> { [] }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; </span><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\">#&lt;Proc:0x00007f986313bc00@(&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># default is now nil</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h.default</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">nil</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h.default_proc</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; </span><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\">#&lt;Proc:0x00007f986313bc00@(&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># set default again</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h.default </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># default_proc is now nil</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h.default_proc</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">nil</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h.default</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">1</span></span></span></code></pre>\n<h2 id=\"checking-for-existence\" style=\"position:relative;\"><a href=\"#checking-for-existence\" aria-label=\"checking for existence permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Checking for existence</h2>\n<p>One situation to be careful of when setting a default value is using <code>if</code> to check if a key exists. This is a fairly common pattern you may see when not setting a default because <code>nil</code> is false-y and the <code>if</code> will not pass. However, when we set a default value, our <code>if</code> will now pass (assuming the default set is truth-y). This may result in unexpected behavior.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-9 grvsc-tJmpaV-9\">Hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.</span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> { |</span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">h</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">k</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">| h[k] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> [] }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># `:foo` key does not exist</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">if</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> h[</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:foo</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">  </span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">puts</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&#39;here&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-11 grvsc-tJmpaV-11\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># however, since we set the default</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># for any key we reference, it&#39;s created</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-3 grvsc-tJmpaV-3\"># in our `if` and will print &quot;here&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">&quot;here&quot;</span></span></span></code></pre>\n<p>Instead, consider using <a href=\"https://ruby-doc.org/core-2.7.1/Hash.html#method-i-key-3F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code>Hash#key?</code></a> to check if the key already exists in the hash without triggering the default value behavior.</p>\n<pre class=\"grvsc-container tomorrow grvsc-ps-tJmpaV\" data-language=\"ruby\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> </span><span class=\"grvsc-t564vY-9 grvsc-tJmpaV-9\">Hash</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">.</span><span class=\"grvsc-t564vY-10 grvsc-tJmpaV-10\">new</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> { |</span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">h</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">,</span><span class=\"grvsc-t564vY-8 grvsc-tJmpaV-8\">k</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">| h[k] </span><span class=\"grvsc-t564vY-6 grvsc-tJmpaV-6\">=</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\"> [] }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">h.key?(</span><span class=\"grvsc-t564vY-7 grvsc-tJmpaV-7\">:bar</span><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t564vY-1 grvsc-tJmpaV-1\">=&gt; </span><span class=\"grvsc-t564vY-4 grvsc-tJmpaV-4\">false</span></span></span></code></pre>\n<h2 id=\"conclusion\" style=\"position:relative;\"><a href=\"#conclusion\" aria-label=\"conclusion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusion</h2>\n<p>In this post, we've covered the three different default value options when initializing a hash - (1) giving no arguments and defaulting to <code>nil</code>, (2) giving an argument and using that <strong>same</strong> object for the value each time, and (3) using a block set the value of the new key.</p>\n<p>We also covered any gotchas you may run into with each of these options so you can avoid problems when using these options in your code.</p>\n<p>I hope that this helps make it easy to choose which version of <code>Hash.new</code> to use.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .tomorrow {\n    background-color: #FFFFFF;\n    color: #4D4D4C;\n  }\n  .tomorrow .grvsc-t564vY-3 { color: #8E908C; }\n  .tomorrow .grvsc-t564vY-1 { color: #4D4D4C; }\n  .tomorrow .grvsc-t564vY-6 { color: #3E999F; }\n  .tomorrow .grvsc-t564vY-9 { color: #C99E00; }\n  .tomorrow .grvsc-t564vY-10 { color: #4271AE; }\n  .tomorrow .grvsc-t564vY-7 { color: #718C00; }\n  .tomorrow .grvsc-t564vY-4 { color: #F5871F; }\n  .tomorrow .grvsc-t564vY-8 { color: #C82829; }\n  .tomorrow .grvsc-t564vY-11 { color: #8959A8; }\n  .tomorrow .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(0, 0, 0, 0.05));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(0, 0, 0, 0.2));\n  }\n  body.dark .grvsc-ps-tJmpaV {\n    background-color: #1D1F21;\n    color: #C5C8C6;\n  }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-3 { color: #969896; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-1 { color: #C5C8C6; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-6 { color: #8ABEB7; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-9 { color: #F0C674; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-10 { color: #81A2BE; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-7 { color: #B5BD68; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-4 { color: #DE935F; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-8 { color: #CC6666; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-tJmpaV-11 { color: #B294BB; }\n  body.dark .grvsc-ps-tJmpaV .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","frontmatter":{"title":"Initial Hash Value in Ruby","date":"August 27, 2020"}}},"pageContext":{"slug":"/2020/08/initialize-hash-value-in-ruby/","previous":{"fields":{"slug":"/2020/08/writing-more-while-remote/"},"frontmatter":{"title":"Writing While Remote"}},"next":{"fields":{"slug":"/2020/09/concurrent-ruby-lazy-threads/"},"frontmatter":{"title":"Concurrent Ruby - Lazy Threads"}}}},"staticQueryHashes":["3128451518","3649515864"]}