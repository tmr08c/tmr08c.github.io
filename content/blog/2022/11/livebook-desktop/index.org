#+title: Livebook Desktop

A few months ago, the Livebook team [[https://news.livebook.dev/introducing-the-livebook-desktop-app-4C8dpu][announced]] the Livebook Desktop app which bundles everything necessary to run the Livebook server, including Elixir. As noted in the announcement post, this bundling provides a low friction way to get folks exposed to Elixir:

#+begin_quote
But imagine someone who's not an Elixir developer. They had to either install Docker or Elixir before getting started with Livebook. And if they are in their first steps as developers, even using a terminal could be demanding.

That's why we built Livebook desktop. It's the simplest way to install Livebook on your machine.
#+end_quote

Also mentioned in the announcement is the idea that, if you already have Elixir installed, getting Livebook installed is easy.

#+begin_quote
Before this release, installing Livebook on your machine could be considered easy, especially if you already had Elixir installed.
#+end_quote

After reading  the announcement and installing it anyway (~brew instal livebook~), I agreed with the announcement—it was easy enough for me to install Livebook as is, so I would continue to use the version I installed through Hex and run the server myself.

However, as Livebook fever has spread through the Elixir ecosystem, I found more needs to reach for Livebook—[[https://www.strangeleaflet.com/strange-leaflet-about-elixir-page1][blog posts]] have begun to include links to ~livemd~ files or leverage the  "Run in Livebook" [[https://livebook.dev/badge][badge]] to follow along and at work we began using Livebook as a tool for both demonstrations as well as validation. As my usage has increased, I found managing Livebook the "old way" becoming more tedious. While I may still not be among the (original) target audience, I have become a convert to the value proposition of Livebook Desktop, even for someone that gets to work in Elixir already.

This conversion has not come from a "killer feature," but rather though a coalescing of conveniences.

- **I don't have to manage a terminal tab**

    Livebook desktop will launch a standalone instance of the Livebook server on your machine in the background. Your Livebook server can be managed, on macOS, via a toolbar icon that allows you to open a browser window pointing at the running server or stop the server.

    This has made it significantly easier to mange running a Livebook server. Rather than having to babysit a terminal tab with your running process, you can launch Livebook Desktop and its there when you need it.

- **Ecosystem support**

    As mentioned above, the Livebook team have created [[https://livebook.dev/badge][badges]] that allow folks to link others to open ~livemd~ file with their own Livebook server. The team has updated the open page to support easily opening files in Livebook instances managed by Livebook Desktop.

    <center>
    [[file:badge-launch-page.png][open in Livebook Desktop opion on Run in Livebook page]]
    </center>

    This allows the Run in Livebook page to quickly find your running Livebook server.

- **Keeping in sync with Elixir and Erlang versions**

    Because Livebook Desktop is packaged with its own version of Elixir, it is manage separately from the various versions of Elixir I have installed via ~asdf~. This allows me to switch between projects and versions of Elixir/Erlang and always be able to launch Livebook.

    Being packaged with Elixir also allows me to keep up with the latest version of Livebook even if I am working on something that is not on the latest version of Elixir. At the time of writing, trying to install Livebook using Elixir 1.13 will fail:

    #+begin_src bash
    \** (Mix) You're trying to run :livebook on Elixir v1.13.4 but it has declared in its mix.exs file it supports only Elixir ~> 1.14
    #+end_src

    By using Livebook Desktop, the Livebook team can use the latest Elixir features and I can use the latest Livebook, regardless of the version of Elixir my current project is running.

While not a single "killer feature," combined, these attributes result in a low maintenance tool that is always available when you need it. The result is a tool that you are more likely to use, and I have.

While there are situations in which you may prefer a different install method or are unable to use Livebook Desktop (sorry Linux users), if you are an Elixir user and haven't installed Livebook Desktop, I would suggest doing so. This is a low-cost experiment that reduces some of the friction in being able to use a great tool.
